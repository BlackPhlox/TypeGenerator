<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;netstandard2.1</TargetFrameworks>
    <IsPackable>true</IsPackable>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <Description>Type Generator for .NET Standard can generate types runtime from delegates and existing types.</Description>
    <PackageDescription>Type Generator for .NET Standard can generate types runtime from delegates and existing types.</PackageDescription>
    <PackageId>Weikio.TypeGenerator</PackageId>
    <Product>Weikio.TypeGenerator</Product>
    <PackageTags>type;assembly;dynamic;runtime;generation;wrapping;roslyn</PackageTags>
    <Title>Weikio.TypeGenerator</Title>
    <RepositoryUrl>https://github.com/weikio/Weikio.TypeGenerator</RepositoryUrl>
    <PackageProjectUrl>https://github.com/weikio/Weikio.TypeGenerator</PackageProjectUrl>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.5.0" />
    <PackageReference Include="System.Reflection.MetadataLoadContext" Version="7.0.0" />
    <PackageReference Include="System.Runtime.Loader" Version="4.3.0" />
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All" />
    <PackageReference Update="MinVer" Version="4.3.0" />
  </ItemGroup>

  <PropertyGroup Condition="$(Configuration)=='Debug'">
    <Version>1.0.0-local</Version>
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <IncludeSourceFilesProjectOutputGroup></IncludeSourceFilesProjectOutputGroup>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb;.snupkg</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>

  <!-- This publishes the nuget package locally using prerelease, remember to have you local .nuget store setup, see Wiki/Setup/New-Developer for more info -->
  <Target Name="PublishNuGetLocally" AfterTargets="Build" Condition="$(Configuration)=='Debug'">
    <Exec Command="dotnet pack $(ProjectPath) -v q" ContinueOnError="WarnAndContinue" />
    <Exec Command="dotnet nuget delete --source $(UserProfile)\.nuget\packages $(PackageId) $(PackageVersion) --non-interactive" ContinueOnError="true" />
    <Exec Command="dotnet nuget push --source $(UserProfile)\.nuget\packages $(ProjectDir)bin\$(Configuration)\$(PackageId).$(PackageVersion).nupkg" ContinueOnError="WarnAndContinue" />
  </Target>
</Project>
